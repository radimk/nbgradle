buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url uri('http://dl.bintray.com/radimk/maven/')
        }
    }
    dependencies {
        classpath group: 'cz.kubacki.gradle.plugins',
                   name: 'gradle-nbm-plugin',
                version: '1.7.+'
        gradleApi()
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'nbm'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven { url 'http://bits.netbeans.org/maven2/' }
    maven { url 'http://repo.gradle.org/gradle/libs-releases-local' }
}

version = '1.0'
nbm {
    moduleName = 'org.nbgradle.netbeans.core'
    localizingBundle = 'org/nbgradle/netbeans/core/Bundle.properties'
    // Module signing data
    keyStore {
         keyStoreFile = project.file('keystore')
         username = 'myself'
         password = 'specialsauce'
    }
}

dependencies {
    compile 'org.netbeans.api:org-netbeans-api-annotations-common:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-debugger:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-debugger-jpda:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-java:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-java-classpath:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-api-progress:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-core-multiview:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-editor-indent-project:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-java-platform:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-java-project:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-java-source:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-options-api:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-projectapi:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-projectuiapi:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-queries:RELEASE80'
    compile 'org.netbeans.api:org-openide-actions:RELEASE80'
    compile 'org.netbeans.api:org-openide-awt:RELEASE80'
    compile 'org.netbeans.api:org-openide-dialogs:RELEASE80'
    compile 'org.netbeans.api:org-openide-filesystems:RELEASE80'
    compile 'org.netbeans.api:org-openide-io:RELEASE80'
    compile 'org.netbeans.api:org-openide-loaders:RELEASE80'
    compile 'org.netbeans.api:org-openide-modules:RELEASE80'
    compile 'org.netbeans.api:org-openide-nodes:RELEASE80'
    compile 'org.netbeans.api:org-openide-text:RELEASE80'
    compile 'org.netbeans.api:org-openide-util:RELEASE80'
    compile 'org.netbeans.api:org-openide-util-lookup:RELEASE80'
    compile 'org.netbeans.api:org-openide-windows:RELEASE80'
//    compile 'org.netbeans.modules:org-netbeans-modules-gsf-testrunner:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-libs-javacapi:RELEASE80'
    // compile files(project.file('src/main/resources'))
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.gradle:gradle-tooling-api:1.12'

    testCompile 'org.netbeans.api:org-netbeans-modules-nbjunit:RELEASE80'
    testCompile 'org.netbeans.modules:org-netbeans-insane:RELEASE80'
    testCompile 'org.netbeans.api:org-netbeans-libs-junit4:RELEASE80'
    testCompile 'junit:junit:4.10'
    testCompile 'com.google.guava:guava:17.0'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

test {
    systemProperty 'integTest.gradleHomeDir', rootProject.file('unpacked/gradle-dist').absolutePath
}

// set netbeansInstallDir project property
task netBeansRun(type: Exec) {
    doFirst {
        if (!project.hasProperty('netBeansInstallDir')) {
            throw new GradleException("missing netBeansInstallDir property")
        }
        def confFile = project.file("$project.buildDir/testuserdir/etc/netbeans.conf")
        confFile.parentFile.mkdirs()
        confFile.write "netbeans_extraclusters=\"$project.buildDir/module\""
    }

    workingDir "${project.buildDir}"

    //on windows:
    commandLine netBeansInstallDir + '/bin/netbeans', '--userdir', "$project.buildDir/testuserdir"
}
