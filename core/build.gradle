buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "cz.kubacki.gradle.plugins:gradle-nbm-plugin:1.8.0"
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: "cz.kubacki.nbm"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven { url 'http://bits.netbeans.org/maven2/' }
    maven { url 'http://repo.gradle.org/gradle/libs-releases-local' }
}

compileJava {
//   options.compilerArgs = ['-s', "$project.buildDir/src/main/generated-sources"]
    options.compilerArgs = ['-sourcepath', "$project.projectDir/src/main/resources"]
}

test.dependsOn tasks.findByPath(':testSetup')

version = '1.0'
nbm {
    moduleName = 'org.nbgradle.netbeans.core'
    localizingBundle = 'org/nbgradle/netbeans/core/Bundle.properties'
    // Module signing data
    keyStore {
         keyStoreFile = project.file('keystore')
         username = 'myself'
         password = 'specialsauce'
    }
}

dependencies {
    compile 'org.netbeans.api:org-netbeans-api-annotations-common:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-debugger:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-debugger-jpda:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-java:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-api-java-classpath:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-api-progress:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-core-multiview:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-editor-indent-project:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-java-platform:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-java-project:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-modules-java-source:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-options-api:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-projectapi:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-projectuiapi:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-queries:RELEASE80'
    compile 'org.netbeans.api:org-openide-actions:RELEASE80'
    compile 'org.netbeans.api:org-openide-awt:RELEASE80'
    compile 'org.netbeans.api:org-openide-dialogs:RELEASE80'
    compile 'org.netbeans.api:org-openide-filesystems:RELEASE80'
    compile 'org.netbeans.api:org-openide-io:RELEASE80'
    compile 'org.netbeans.api:org-openide-loaders:RELEASE80'
    compile 'org.netbeans.api:org-openide-modules:RELEASE80'
    compile 'org.netbeans.api:org-openide-nodes:RELEASE80'
    compile 'org.netbeans.api:org-openide-text:RELEASE80'
    compile 'org.netbeans.api:org-openide-util:RELEASE80'
    compile 'org.netbeans.api:org-openide-util-lookup:RELEASE80'
    compile 'org.netbeans.api:org-openide-windows:RELEASE80'
    compile 'org.netbeans.api:org-netbeans-modules-xml-jaxb-api:RELEASE80'
//    compile 'org.netbeans.modules:org-netbeans-modules-gsf-testrunner:RELEASE80'
//    compile 'org.netbeans.api:org-netbeans-libs-javacapi:RELEASE80'
    // compile files(project.file('src/main/resources'))
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.gradle:gradle-tooling-api:1.12'
    compile 'com.google.guava:guava:17.0'

    testCompile 'org.codehaus.groovy:groovy-all:2.2.0'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'cglib:cglib-nodep:2.2.2'
    testCompile 'org.netbeans.modules:org-netbeans-modules-masterfs:RELEASE80'
    testCompile 'org.netbeans.api:org-netbeans-modules-nbjunit:RELEASE80'
    testCompile 'org.netbeans.modules:org-netbeans-insane:RELEASE80'
    testCompile 'org.netbeans.api:org-netbeans-libs-junit4:RELEASE80'
    testCompile 'junit:junit:4.10'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.gradle:integ-test-helpers:0.2.0-rc.4'
}

test {
    systemProperty 'integTest.gradleHomeDir', rootProject.file('unpacked/gradle-dist').absolutePath
}

task netBeansRun(type: Exec) {
    dependsOn tasks.findByPath(':runSetup')
    doFirst {
        def confFile = project.file("$project.buildDir/testuserdir/etc/netbeans.conf")
        confFile.parentFile.mkdirs()
        confFile.write "netbeans_extraclusters=\"$project.buildDir/module\""

        def timestamp = project.file("$buildDir/module/.lastModified")
        if (timestamp.exists()) {
            timestamp.setLastModified(System.currentTimeMillis())
        } else {
            timestamp.createNewFile()
        }
    }

    workingDir "${project.buildDir}"

    commandLine rootProject.rootDir.absolutePath + '/unpacked/netbeans/netbeans/bin/netbeans', '--userdir', "$project.buildDir/testuserdir", '-J-Dnetbeans.console.logger=true', '-J-Dorg.nbgradle.netbeans.level=FINER'
}
